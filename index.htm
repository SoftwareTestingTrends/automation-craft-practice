<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="styles.css" />
    <title>Test Automation Craft</title>
  </head>
  <body>
    <header>
      <nav>
        <ul>
          <li><a href="index.htm" class="active">Home</a></li>
          <li><a href="webform.htm">Web Form</a></li>
          <li><a href="about.htm">About</a></li>
        </ul>
      </nav>
    </header>

    <div id="intro">
      <h1>Welcome to the Test Automation Craft Hub!</h1>
      <p>
        This website aims to serve as a dedicated platform for honing UI and API
        test automation skills. It is currently under development, with plans to
        incorporate more challenging scenarios in the near future.
      </p>
    </div>

    <div id="challenges">
      <h2>UI Automation Challenges</h2>
      <h3>Challenge: Automate the Web Form</h3>
      <p>
        Complete the following tasks using the sample
        <a href="./webform.htm">Web Form.</a>
      </p>
      <ul>
        <li>
          <strong>Task 1:</strong> Open the website and confirm the accuracy of
          the page URL, title, and heading.
        </li>
        <li>
          <strong>Task 2:</strong> Complete the web form; upon submission,
          verify the correctness of the thank-you message.
        </li>
        <li>
          <strong>Task 3:</strong> Attempt to submit the web form without
          entering any information and verify that appropriate error messages
          are displayed.
        </li>
        <li>
          <strong>Task 4:</strong> Select a different location from the dropdown
          in the web form and verify the selected value.
        </li>
        <li>
          <strong>Task 5:</strong> Check the checkbox for a programming language
          (e.g., JavaScript) and confirm its selection.
        </li>
        <li>
          <strong>Task 6:</strong> Choose multiple testing tools in the form,
          submit it, and validate the selected tools on the confirmation page.
        </li>
        <li>
          <strong>Task 7:</strong> Toggle between radio buttons for gender,
          submit the form, and confirm the selected gender on the confirmation
          page.
        </li>
        <li>
          <strong>Task 8:</strong> Fill the web form; On page submission,
          validate the submitted information on the confirmation page.
        </li>
      </ul>
      <hr />
      <h2>API Automation Challenges</h2>
      <h3>Challenge: API Functional & Non-Functional Testing</h3>
      <p>
        Use the <a href="https://reqres.in/" target="_blank">Reqres API</a> to
        perform the following tasks.
      </p>
      <ul>
        <li>
          <strong>Task 1: Existing User Verification</strong>
          <p>
            Send a GET request to retrieve deatils about an existing user.
            Verify the correctness of the user details.
          </p>
        </li>
        <li>
          <strong>Task 2: User Creation and Verification</strong>
          <p>
            Send a POST request to create a new user. Verify the response for
            successful creation.
          </p>
        </li>
        <li>
          <strong>Task 3: User Update and Verification</strong>
          <p>
            Send a PUT request to update the user's information. Verify the
            response and check the updated details.
          </p>
        </li>
        <li>
          <strong>Task 4: User Deletion and Verification</strong>
          <p>
            Send a DELETE request to remove the user. Verify the response and
            confirm the user's deletion.
          </p>
        </li>
        <li>
          <strong>Task 5: List Users and Verify Content</strong>
          <p>
            Retrieve the list of users using a GET request. Validate the
            correctness of the user details in the response.
          </p>
        </li>
        <li>
          <strong>Task 6: Error Handling</strong>
          <p>
            Intentionally send incorrect requests (e.g., with missing
            parameters). Verify that the API returns appropriate error messages.
          </p>
        </li>
        <li>
          <strong>Task 7: Pagination Testing</strong>
          <p>
            Test pagination by retrieving users with different page numbers.
            Validate the correctness of pagination.
          </p>
        </li>
        <li>
          <strong>Task 8: Authorization Testing</strong>
          <p>
            Explore API endpoints that require authorization (e.g., user login).
            Implement tests to ensure proper authorization mechanisms. Also
            validate the API responses for unauthorized access.
          </p>
        </li>
        <li>
          <strong>Task 9: Performance Testing</strong>
          <p>
            Measure the response time for different API endpoints. Implement
            tests to ensure acceptable performance levels.
          </p>
        </li>
        <li>
          <strong>Task 10: Interoperability Testing</strong>
          <p>
            Create and execute a test suite that includes multiple API requests
            with dependencies between them.
          </p>
        </li>
      </ul>
      <hr />
      <h2>GitHub Action Challenges</h2>
      <h3>Challenge: Automate the Web Form</h3>
      <ul>
        <li>
          <strong>Task 1:</strong> Set up a GitHub Action for manually
          initiating a workflow -
          <a
            href="https://github.com/SoftwareTestingTrends/github-actions-practice/blob/main/practice-exercise-1.md"
            target="_blank"
            >Solution</a
          >
        </li>
        <li>
          <strong>Task 2:</strong> Setup a GitHub Action to activate a workflow
          upon pushing changes to the main branch -
          <a
            href="https://github.com/SoftwareTestingTrends/github-actions-practice/blob/main/practice-exercise-2.md"
            target="_blank"
            >Solution</a
          >
        </li>
        <li>
          <strong>Task 4:</strong> Setup a GitHub Action to activate a workflow
          on a PR (pull-request) event -
          <a
            href="https://github.com/SoftwareTestingTrends/github-actions-practice/blob/main/practice-exercise-3.md"
            target="_blank"
            >Solution</a
          >
        </li>
        <li>
          <strong>Task 3:</strong> Setup a GitHub Action to activate a workflow
          on a given schedule -
          <a
            href="https://github.com/SoftwareTestingTrends/github-actions-practice/blob/main/practice-exercise-4.md"
            target="_blank"
            >Solution</a
          >
        </li>
        <li>
          <strong>Task 5:</strong> Setup a GitHub Action to activate a workflow
          on a repository_dispatch event -
          <a
            href="https://github.com/SoftwareTestingTrends/github-actions-practice/blob/main/practice-exercise-5.md"
            target="_blank"
            >Solution</a
          >
        </li>
        <li>
          <strong>Task 6:</strong> Setup an E2E pipeline -
          <a
            href="https://github.com/SoftwareTestingTrends/github-actions-practice/blob/main/practice-exercise-6.md"
            target="_blank"
            >Solution</a
          >
        </li>
      
        <li><strong>Task 7:</strong> Build a custom action</li>
      </ul>
    </div>

    <footer>
      <p>
        &copy; 2024
        <a href="https://softwaretestingtrends.com/" target="_blank"
          >Software Testing Trends</a
        >. All rights reserved.
      </p>
    </footer>
  </body>
</html>
